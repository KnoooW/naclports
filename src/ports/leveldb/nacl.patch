diff --git a/Makefile b/Makefile
index 344ff29..5e5249e 100644
--- a/Makefile
+++ b/Makefile
@@ -90,7 +90,11 @@ endif  # PLATFORM_SHARED_EXT
 
 all: $(SHARED) $(LIBRARY)
 
-check: all $(PROGRAMS) $(TESTS)
+tests: $(TESTS)
+
+programs: $(PROGRAMS)
+
+check: all programs tests
 	for t in $(TESTS); do echo "***** Running $$t"; ./$$t || exit 1; done
 
 clean:
diff --git a/build_detect_platform b/build_detect_platform
index 6e59c6f..bf10dc4 100755
--- a/build_detect_platform
+++ b/build_detect_platform
@@ -98,6 +98,22 @@ case "$TARGET_OS" in
         PLATFORM_LIBS="-lpthread"
         PORT_FILE=port/port_posix.cc
         ;;
+    NaCl)
+        PLATFORM=OS_NACL
+        COMMON_FLAGS="$MEMCMP_FLAG -D_REENTRANT -DOS_NACL -DLEVELDB_PLATFORM_POSIX"
+        PLATFORM_LDFLAGS="-pthread"
+        PORT_FILE=port/port_posix.cc
+        CROSS_COMPILE=true
+        if [ "$NACL_ARCH" = arm -o "$NACL_ARCH" = pnacl ]; then
+            COMMON_FLAGS="$COMMON_FLAGS -DLEVELDB_ATOMIC_PRESENT"
+            # Would use -std=c++11 here but its broken on PNaCl:
+            # http://crbug.com/314944
+            PLATFORM_CXXFLAGS="-std=gnu++11"
+        fi
+        if [ "$NACL_SHARED" != 1 ]; then
+          PLATFORM_SHARED_EXT=""
+        fi
+        ;;
     NetBSD)
         PLATFORM=OS_NETBSD
         COMMON_FLAGS="$MEMCMP_FLAG -D_REENTRANT -DOS_NETBSD"
diff --git a/port/atomic_pointer.h b/port/atomic_pointer.h
index a9866b2..5e80b34 100644
--- a/port/atomic_pointer.h
+++ b/port/atomic_pointer.h
@@ -20,6 +20,9 @@
 #define PORT_ATOMIC_POINTER_H_
 
 #include <stdint.h>
+#ifdef LEVELDB_ATOMIC_PRESENT
+#include <atomic>
+#endif
 #ifdef LEVELDB_CSTDATOMIC_PRESENT
 #include <cstdatomic>
 #endif
@@ -125,8 +128,8 @@ class AtomicPointer {
   }
 };
 
-// AtomicPointer based on <cstdatomic>
-#elif defined(LEVELDB_CSTDATOMIC_PRESENT)
+// AtomicPointer based on <cstdatomic> or <atomic>
+#elif defined(LEVELDB_CSTDATOMIC_PRESENT) || defined(LEVELDB_ATOMIC_PRESENT)
 class AtomicPointer {
  private:
   std::atomic<void*> rep_;
diff --git a/port/port_posix.h b/port/port_posix.h
index f2b89bf..8976acb 100644
--- a/port/port_posix.h
+++ b/port/port_posix.h
@@ -37,6 +37,14 @@
   // See http://code.google.com/p/android/issues/detail?id=39824
   #include <endian.h>
   #define PLATFORM_IS_LITTLE_ENDIAN  (_BYTE_ORDER == _LITTLE_ENDIAN)
+#elif defined(OS_NACL)
+  #include <sys/types.h>
+  #if defined(__GLIBC__)
+     #include <endian.h>
+  #else
+    #include <machine/endian.h>
+    #define PLATFORM_IS_LITTLE_ENDIAN  (BYTE_ORDER == LITTLE_ENDIAN)
+  #endif
 #else
   #include <endian.h>
 #endif
@@ -55,7 +63,7 @@
 
 #if defined(OS_MACOSX) || defined(OS_SOLARIS) || defined(OS_FREEBSD) ||\
     defined(OS_NETBSD) || defined(OS_OPENBSD) || defined(OS_DRAGONFLYBSD) ||\
-    defined(OS_ANDROID) || defined(OS_HPUX)
+    defined(OS_ANDROID) || defined(OS_HPUX) || (defined(OS_NACL) && defined(_NEWLIB_VERSION))
 // Use fread/fwrite/fflush on platforms without _unlocked variants
 #define fread_unlocked fread
 #define fwrite_unlocked fwrite
